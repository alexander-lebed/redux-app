{"version":3,"sources":["webpack:///./src/components/common/ConfirmationModal.js","webpack:///./src/components/People/People.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_2___default","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_3___default","props","translation","useSelector","state","a","createElement","show","onHide","onCancel","Header","Title","title","Body","body","Footer","variant","size","onClick","onConfirm","YES","CANCEL","People","_React$Component","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default","user","setState","clickedUser","userId","deleteUserId","deleteUser","hideDeleteConfirmation","searchText","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","key","value","_this2","_this$props","users","history","PEOPLE","COMMON","filter","e","react__WEBPACK_IMPORTED_MODULE_7___default","react_bootstrap_Container__WEBPACK_IMPORTED_MODULE_10___default","fluid","react_bootstrap_Row__WEBPACK_IMPORTED_MODULE_11___default","react_bootstrap_Col__WEBPACK_IMPORTED_MODULE_12___default","md","span","offset","lg","xs","sm","react_bootstrap_InputGroup__WEBPACK_IMPORTED_MODULE_16___default","className","Prepend","react_bootstrap_Form__WEBPACK_IMPORTED_MODULE_14___default","Control","placeholder","SEARCH_PEOPLE","aria-label","aria-describedby","onChange","react_bootstrap_Jumbotron__WEBPACK_IMPORTED_MODULE_19___default","react_bootstrap_Table__WEBPACK_IMPORTED_MODULE_13___default","map","UserRow","_id","showUserProfile","u","showDeleteConfirmation","react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_15___default","closeButton","username","style","textAlign","react_bootstrap_Image__WEBPACK_IMPORTED_MODULE_18___default","src","pictureUrl","_common_ConfirmationModal__WEBPACK_IMPORTED_MODULE_23__","DELETE_CONFIRMATION","React","Component","Object","react_redux__WEBPACK_IMPORTED_MODULE_8__","_useSelector","loggedUser","isAdmin","_constants__WEBPACK_IMPORTED_MODULE_20__","imageStyle","id","padding","concat","roundedCircle","online","LAST_SEEN","timestampToHumanDate","lastTime","Fragment","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_17___default","marginRight","DELETE","userIds","query","query_string__WEBPACK_IMPORTED_MODULE_9___default","stringify","WRITE_MESSAGE"],"mappings":"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","file":"29.chunk.1.0.0.js","sourcesContent":["// @flow\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport type { Node } from 'react';\r\nimport type { Translation } from '../../types';\r\n\r\ntype Props = {\r\n    title: Node | string,\r\n    body: Node | string,\r\n    onConfirm: Function,\r\n    onCancel: Function,\r\n}\r\n\r\nconst ConfirmationModal = (props: Props) => {\r\n    const translation: Translation = useSelector(state => state.translation);\r\n    return (\r\n        <Modal show onHide={props.onCancel}>\r\n            <Modal.Header >\r\n                <Modal.Title>\r\n                    {props.title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {props.body}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button\r\n                    variant='success'\r\n                    size='sm'\r\n                    onClick={props.onConfirm}\r\n                >\r\n                    {translation.COMMON.YES}\r\n                </Button>\r\n                <Button\r\n                    variant='outline-dark'\r\n                    size='sm'\r\n                    onClick={props.onCancel}\r\n                >\r\n                    {translation.COMMON.CANCEL}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","// @flow\r\nimport React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport queryString from 'query-string';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport { ONLINE_STYLE, adminEmail } from '../../constants';\r\nimport { timestampToHumanDate } from '../../utils';\r\nimport { deleteUser } from '../../redux/reducers/users';\r\nimport ConfirmationModal from '../common/ConfirmationModal';\r\nimport type { User, Translation } from '../../types';\r\n\r\ntype Props = {\r\n    history: Object,\r\n    user: User,\r\n    users: Array<User>,\r\n    translation: Translation,\r\n    deleteUser: Function\r\n}\r\n\r\ntype State = {\r\n    searchText: string,\r\n    deleteUserId: string,\r\n    clickedUser: User | null\r\n}\r\n\r\nexport class People extends React.Component<Props, State> {\r\n\r\n    state: State;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            searchText: '',\r\n            deleteUserId: '',\r\n            clickedUser: null\r\n        }\r\n    }\r\n\r\n    showUserProfile = (user: User | null) => this.setState({clickedUser: user});\r\n\r\n    showDeleteConfirmation = (userId: string) => this.setState({deleteUserId: userId});\r\n\r\n    hideDeleteConfirmation = () => this.setState({deleteUserId: ''});\r\n\r\n    deleteUser = () => {\r\n        this.props.deleteUser(this.state.deleteUserId);\r\n        this.hideDeleteConfirmation();\r\n    };\r\n\r\n    render() {\r\n        let {users, history, translation} = this.props;\r\n        const {PEOPLE, COMMON} = translation;\r\n        if (this.state.searchText) {\r\n            users = users.filter(e => e.username.toLowerCase().indexOf(this.state.searchText.toLowerCase()) !== -1)\r\n        }\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={{span: 10, offset: 1}} lg={{span: 8, offset: 2}}>\r\n                        <Row>\r\n                            <Col xs={12} sm={6}>\r\n                                <InputGroup size='sm' className='search-container'>\r\n                                    <InputGroup.Prepend>\r\n                                        <i className='fas fa-search' />\r\n                                    </InputGroup.Prepend>\r\n                                    <Form.Control\r\n                                        placeholder={PEOPLE.SEARCH_PEOPLE}\r\n                                        aria-label='Search people'\r\n                                        aria-describedby='search'\r\n                                        className='search-input'\r\n                                        value={this.state.searchText}\r\n                                        onChange={e => this.setState({searchText: e.target.value})}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {users.length === 0\r\n                            ?  <Jumbotron className='text-center'>{COMMON.NO_RESULTS}</Jumbotron>\r\n                            : <Table>\r\n                                <tbody>\r\n                                    {users.map(user => (\r\n                                        <UserRow\r\n                                            key={user._id}\r\n                                            history={history}\r\n                                            user={user}\r\n                                            showUserProfile={u => this.showUserProfile(u)}\r\n                                            showDeleteConfirmation={userId => this.showDeleteConfirmation(userId)}\r\n                                        />\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        }\r\n                        {this.state.clickedUser &&\r\n                        <Modal\r\n                            show={this.state.clickedUser !== null}\r\n                            className='profile-modal'\r\n                            onHide={() => this.showUserProfile(null)}\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>{this.state.clickedUser.username}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body style={{textAlign: 'center'}}>\r\n                                <Image\r\n                                    className='profile-modal-picture'\r\n                                    src={this.state.clickedUser.pictureUrl ? this.state.clickedUser.pictureUrl : '/images/default-profile.jpg'}\r\n                                />\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                        }\r\n                        {this.state.deleteUserId &&\r\n                        <ConfirmationModal\r\n                            title={COMMON.DELETE_CONFIRMATION}\r\n                            body={PEOPLE.DELETE_CONFIRMATION}\r\n                            onConfirm={() => this.deleteUser()}\r\n                            onCancel={() => this.hideDeleteConfirmation()}\r\n                        />\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.authentication.user,\r\n        users: state.users.users,\r\n        translation: state.translation\r\n    }),\r\n    { deleteUser }\r\n)(People);\r\n\r\n\r\ntype UserRowProps = {\r\n    history: Object,\r\n    user: User,\r\n    showUserProfile: Function,\r\n    showDeleteConfirmation: Function\r\n}\r\nexport const UserRow = ((props: UserRowProps) => {\r\n    const {user, showUserProfile, showDeleteConfirmation, history} = props;\r\n    const {loggedUser, translation} = useSelector(state => ({\r\n        loggedUser: state.authentication.user,\r\n        translation: state.translation\r\n    }));\r\n\r\n    const isAdmin = loggedUser.email === adminEmail;\r\n\r\n    const imageStyle = user.online ? ONLINE_STYLE : {};\r\n\r\n    const goToConversationWith = (userIds: Array<string>) => {\r\n        const query = queryString.stringify({userIds});\r\n        history.push(`/conversation?${query}`);\r\n    };\r\n    return (\r\n        <tr key={user._id} id={user._id}>\r\n            <td style={{padding: 10}}>\r\n                <Row>\r\n                    <Col xs={12} sm={6}>\r\n                        <div\r\n                            className='profile-picture-wrapper cursor'\r\n                            onClick={() => showUserProfile(user)}\r\n                        >\r\n                            <Image\r\n                                id={`user-picture-${user._id}`}\r\n                                roundedCircle\r\n                                style={imageStyle}\r\n                                className='profile-picture'\r\n                                src={user.pictureUrl ? user.pictureUrl : '/images/default-profile.jpg'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {user.username}\r\n                            <div className='last-seen'>\r\n                                {!user.online && `${translation.PEOPLE.LAST_SEEN} ${timestampToHumanDate(user.lastTime, false, translation)}`}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={12} sm={6}>\r\n                        <div className='pull-right pt-1 pt-sm-2'>\r\n                            {isAdmin &&\r\n                            <>\r\n                                <Button\r\n                                    id={`delete-user-${user._id}`}\r\n                                    size='sm'\r\n                                    variant='outline-danger'\r\n                                    onClick={() => showDeleteConfirmation(user._id)}\r\n                                >\r\n                                    <i className='far fa-trash-alt' style={{marginRight: 5}} /> {translation.COMMON.DELETE}\r\n                                </Button>\r\n                                {' '}\r\n                            </>\r\n                            }\r\n                            <Button\r\n                                id={`write-user-${user._id}`}\r\n                                size='sm'\r\n                                variant='outline-dark'\r\n                                onClick={() => goToConversationWith([user._id])}\r\n                            >\r\n                                <i className='far fa-paper-plane' style={{marginRight: 5}} /> {translation.PEOPLE.WRITE_MESSAGE}\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </td>\r\n        </tr>\r\n    )\r\n});\r\nUserRow.displayName = 'UserRow';"],"sourceRoot":""}