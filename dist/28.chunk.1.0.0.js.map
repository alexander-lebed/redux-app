{"version":3,"sources":["webpack:///./src/components/common/PeopleSelector.js","webpack:///./src/components/Messages/CreateConversation.js"],"names":["PeopleSelector","_React$PureComponent","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default","user","people","state","map","e","_id","includes","setState","filter","selectedUserIds","users","selectedUsers","searchText","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","key","value","_this2","_this$state","_this$props","excludedUserIds","submitButtonText","onSubmit","onCancel","translation","orderBy","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","react_bootstrap_InputGroup__WEBPACK_IMPORTED_MODULE_13___default","size","Prepend","react_bootstrap_Form__WEBPACK_IMPORTED_MODULE_12___default","Control","placeholder","SEARCH_PEOPLE","aria-label","aria-describedby","onChange","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_14___default","variant","onClick","CANCEL","disabled","SUBMIT","length","NO_RESULTS","react_bootstrap_Table__WEBPACK_IMPORTED_MODULE_11___default","hover","selected","id","style","padding","toggleUser","react_bootstrap_Row__WEBPACK_IMPORTED_MODULE_9___default","noGutters","react_bootstrap_Col__WEBPACK_IMPORTED_MODULE_10___default","xs","react_bootstrap_Image__WEBPACK_IMPORTED_MODULE_15___default","roundedCircle","src","fontSize","fontWeight","username","color","online","concat","LAST_SEEN","timestampToHumanDate","lastTime","marginTop","type","checked","React","PureComponent","__webpack_exports__","Object","react_redux__WEBPACK_IMPORTED_MODULE_8__","CreateConversation","_React$Component","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","members","url","query_string__WEBPACK_IMPORTED_MODULE_9___default","stringify","userIds","history","push","CONVERSATIONS","react_bootstrap_Container__WEBPACK_IMPORTED_MODULE_10___default","fluid","react_bootstrap_Row__WEBPACK_IMPORTED_MODULE_11___default","react_bootstrap_Col__WEBPACK_IMPORTED_MODULE_12___default","md","span","offset","lg","_common_PeopleSelector__WEBPACK_IMPORTED_MODULE_13__","CREATE","createConversation","Component"],"mappings":"4aA8BaA,EAAb,SAAAC,GAOI,SAAAD,EAAAE,GAA0B,IAAAC,EAAAC,IAAAC,KAAAL,GACtBG,EAAAG,IAAAD,KAAAE,IAAAP,GAAAQ,KAAAH,KAAAH,IADsBO,IAAAC,IAAAP,GAAA,gBAAAM,IAAAC,IAAAP,GAAA,aAcb,SAAAQ,GAAgB,IAClBC,EAAUT,EADQU,MAAAD,OAErBA,EAAAE,IAAW,SAAAC,GAAC,OAAIA,EAAJC,MAAZC,SAAgCN,EAApCK,KACIb,EAAAe,SAAc,CACVN,OAAQA,EAAAO,OAAc,SAAAJ,GAAC,OAAIA,QAAUJ,EAAdK,QAG3Bb,EAAAe,SAAc,CACVN,OAAQA,gBAtBM,IAEfQ,EAA0BlB,EAFXkB,gBAEEC,EAASnB,EAFXmB,MAIlBC,EAAJ,GAJsB,OAKlBF,SAAJ,IACIE,EAAgBD,EAAAF,OAAa,SAAAJ,GAAC,OAAIK,WAAyBL,EAA7BC,QAElCb,EAAAU,MAAa,CACTU,WADS,GAETX,OAAQU,GAVUnB,EAP9B,OAAAqB,IAAAxB,EAAAC,GAAAwB,IAAAzB,EAAA,EAAA0B,IAAA,SAAAC,MAAA,WAkCa,IAAAC,EAAAvB,KAAAwB,EACwBxB,KADxBQ,MACED,EADFiB,EAAAjB,OACUW,EADVM,EAAAN,WAAAO,EAE6EzB,KAF7EH,MAEAmB,EAFAS,EAAAT,MAEOU,EAFPD,EAAAC,gBAEwBC,EAFxBF,EAAAE,iBAE0CC,EAF1CH,EAAAG,SAEoDC,EAFpDJ,EAAAI,SAE8DC,EAF9DL,EAAAK,YAQL,OALAd,EAAQA,EAAAF,OAAa,SAAAJ,GAAC,OAAKgB,WAAyBhB,EAA9BC,OACtBO,IACIF,EAAQA,EAAAF,OAAa,SAAAJ,GAAC,WAAIA,iCAAiCQ,EAAjCR,kBAE9BM,EAAQe,kBAAOf,EAAQ,CAAvBA,aAEIgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAAE,EAAAH,EAAA,CAAYI,KAAZ,KAAsBF,UAAU,UAC5BH,EAAAC,EAAAC,cAACE,EAAAH,EAADK,QAAA,KACIN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAACK,EAAAN,EAADO,QAAA,CACIC,YAAaX,SADjBY,cAEIC,aAFJ,gBAGIC,mBAHJ,SAIIT,UAJJ,eAKIb,MALJJ,EAMI2B,SAAU,SAAAnC,GAAC,OAAIa,EAAAV,SAAc,CAACK,WAAYR,SAASY,YAG3DU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAAY,EAAAb,EAAA,CAAQI,KAAR,KAAkBU,QAAlB,oBAA8CC,QAASnB,GAClDC,SAFTmB,QAAA,IAKIjB,EAAAC,EAAAC,cAAAY,EAAAb,EAAA,CACII,KADJ,KAEIU,QAFJ,UAGIG,SAHJ,IAGc3C,SACVyC,QAAS,kBAAMpB,EAANrB,KAERoB,GAAoBG,SA1BrCqB,UA8BK,IAAAnC,EAAAoC,OAAqBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeL,SAAnDuB,YACGrB,EAAAC,EAAAC,cAAAoB,EAAArB,EAAA,CAAOsB,OAAK,GACRvB,EAAAC,EAAAC,cAAA,aACKlB,EAAAP,IAAU,SAAAH,GACP,IAAMkD,EAAWjD,EAAAE,IAAW,SAAAC,GAAC,OAAIA,EAAJC,MAAZC,SAAgCN,EAAjDK,KACA,OACIqB,EAAAC,EAAAC,cAAA,MAAIb,IAAKf,EAATK,IAAmB8C,GAAInD,EAAKK,KACxBqB,EAAAC,EAAAC,cAAA,MAAIC,UAAWqB,EAAQ,SAAvB,GAAyCE,MAAO,CAACC,QAAS,GAAIX,QAAS,kBAAMzB,EAAAqC,WAANtD,KACnE0B,EAAAC,EAAAC,cAAA2B,EAAA5B,EAAA,CAAK6B,WAAS,GACV9B,EAAAC,EAAAC,cAAA6B,EAAA9B,EAAA,CAAK+B,GAAI,IACLhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA+B,EAAAhC,EAAA,CACIiC,eADJ,EAEIR,MAAOpD,wBAFX,GAGI6B,UAHJ,kBAIIgC,IAAK7D,aAAkBA,EAAlBA,WAAoC,iCAGjD0B,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACU,SAAU,KACnBpC,EAAAC,EAAAC,cAAA,QAAMwB,MAAO,CAACW,WAAY,MACrB/D,EAFTgE,UAIItC,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACa,MAAO,UACdjE,EAADkE,QAAA,GAAAC,OAAmB3C,SAAnB4C,UAAA,KAAAD,OAAmDE,+BAAqBrE,EAADsE,UAAA,EAfxF9C,OAmBIE,EAAAC,EAAAC,cAAA6B,EAAA9B,EAAA,CAAK+B,GAAI,GACLhC,EAAAC,EAAAC,cAAA,OAAKC,UAAL,6BAA4CuB,MAAO,CAACmB,UAAW,KAC3D7C,EAAAC,EAAAC,cAAA,SACI4C,KADJ,WAEIC,QAFJvB,EAGIX,SAAU,eAEdb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gCA3GzExC,EAAA,CAAoCqF,IAApCC,mBAAatF,iBAEa,CAClB+B,gBADkB,GAElBX,gBAFkB,GAGlBY,iBAAkB,KAsHXuD,EAAA,QAAAC,OAAAC,EAAA,EAAAD,CACX,SAAA3E,GAAK,MAAK,CACNQ,MAAOR,QADDQ,MAENc,YAAatB,EAAMsB,cAHZ,CAAfnC,+TCxIa0F,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAzF,EAAAC,IAAAC,KAAAqF,GAAA,QAAAG,EAAAC,UAAArC,OAAAsC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAA9F,EAAAG,IAAAD,MAAAuF,EAAArF,IAAAmF,IAAAlF,KAAA0F,MAAAN,EAAA,CAAAvF,MAAAyE,OAAAiB,KAAAtF,IAAAC,IAAAP,GAAA,qBAEyB,SAAAgG,GACjB,IAAMC,EAAG,iBAAAtB,OAAoBuB,EAAA/D,EAAAgE,UAAsB,CAACC,QAASJ,EAAArF,IAAY,SAAAC,GAAC,OAAIA,EAAJC,SAC1Eb,EAAAD,MAAAsG,QAAAC,KAAAL,KAJRjG,EAAA,OAAAqB,IAAAkE,EAAAC,GAAAlE,IAAAiE,EAAA,EAAAhE,IAAA,SAAAC,MAAA,WAOa,IAAAC,EAAAvB,KAAAyB,EAC8BzB,KAD9BH,MACAS,EADAmB,EAAAnB,KACMwB,EADNL,EAAAK,YACmBqE,EADnB1E,EAAA0E,QAEEE,EAAiBvE,EAFnBuE,cAGL,OACIrE,EAAAC,EAAAC,cAAAoE,EAAArE,EAAA,CAAWsE,OAAK,GACZvE,EAAAC,EAAAC,cAAAsE,EAAAvE,EAAA,CAAK6B,WAAS,GACV9B,EAAAC,EAAAC,cAAAuE,EAAAxE,EAAA,CAAKyE,GAAI,CAACC,KAAD,GAAWC,OAAQ,GAAIC,GAAI,CAACF,KAAD,EAAUC,OAAQ,IAClD5E,EAAAC,EAAAC,cAAA4E,EAAA,SACIpF,gBAAiB,CAACpB,EADtBK,KAEIgB,iBAAkB0E,EAFtBU,OAGInF,SAAU,SAAArB,GAAA,OAAYgB,EAAAyF,mBAAZzG,IACVsB,SAAU,kBAAMsE,OAAN,4BAlBtCd,EAAA,CAAwCL,IAAxCiC,WA2Be/B,EAAA,QAAAC,OAAAC,EAAA,EAAAD,CACX,SAAA3E,GAAK,MAAK,CACNF,KAAME,iBADAF,KAENwB,YAAatB,EAAMsB,cAHZ,CAAfuD","file":"28.chunk.1.0.0.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { orderBy, timestampToHumanDate } from '../../utils';\r\nimport { ONLINE_STYLE } from '../../constants';\r\nimport type { User, Translation } from '../../types';\r\n\r\ntype Props = {\r\n    excludedUserIds?: Array<string>,\r\n    selectedUserIds?: Array<string>,\r\n    submitButtonText?: string,\r\n    onSubmit: (people: Array<User>) => void,\r\n    onCancel: Function,\r\n    // redux props\r\n    users: Array<User>,\r\n    translation: Translation,\r\n}\r\n\r\ntype State = {\r\n    searchText: string,\r\n    people: Array<User>\r\n}\r\n\r\nexport class PeopleSelector extends React.PureComponent<Props, State> {\r\n    state: State;\r\n    static defaultProps = {\r\n        excludedUserIds: [],\r\n        selectedUserIds: [],\r\n        submitButtonText: ''\r\n    };\r\n    constructor(props: Props) {\r\n        super(props);\r\n        const {selectedUserIds, users} = props;\r\n\r\n        let selectedUsers = [];\r\n        if (selectedUserIds.length > 0) {\r\n            selectedUsers = users.filter(e => selectedUserIds.includes(e._id));\r\n        }\r\n        this.state = {\r\n            searchText: '',\r\n            people: selectedUsers\r\n        }\r\n    }\r\n\r\n    toggleUser = (user: User) => {\r\n        const {people} = this.state;\r\n        if (people.map(e => e._id).includes(user._id)) {\r\n            this.setState({\r\n                people: people.filter(e => e._id !== user._id)\r\n            })\r\n        } else {\r\n            this.setState({\r\n                people: people.concat(user)\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {people, searchText} = this.state;\r\n        let {users, excludedUserIds, submitButtonText, onSubmit, onCancel, translation} = this.props;\r\n        users = users.filter(e => !excludedUserIds.includes(e._id));\r\n        if (searchText) {\r\n            users = users.filter(e => e.username.toLowerCase().indexOf(searchText.toLowerCase()) !== -1)\r\n        }\r\n        users = orderBy(users, ['username']);\r\n        return (\r\n            <div>\r\n                <div className='people-select-header'>\r\n                    <InputGroup size='sm' className='search'>\r\n                        <InputGroup.Prepend>\r\n                            <i className='fas fa-search' />\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                            placeholder={translation.PEOPLE.SEARCH_PEOPLE}\r\n                            aria-label='Search people'\r\n                            aria-describedby='search'\r\n                            className='search-input'\r\n                            value={searchText}\r\n                            onChange={e => this.setState({searchText: e.target.value})}\r\n                        />\r\n                    </InputGroup>\r\n                    <div className='actions'>\r\n                        <Button size='sm' variant='outline-secondary' onClick={onCancel}>\r\n                            {translation.COMMON.CANCEL}\r\n                        </Button>\r\n                        {' '}\r\n                        <Button\r\n                            size='sm'\r\n                            variant='success'\r\n                            disabled={people.length === 0}\r\n                            onClick={() => onSubmit(people)}\r\n                        >\r\n                            {submitButtonText || translation.COMMON.SUBMIT}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {users.length === 0 ? <div className='text-center'>{translation.COMMON.NO_RESULTS}</div> :\r\n                    <Table hover>\r\n                        <tbody>\r\n                            {users.map(user => {\r\n                                const selected = people.map(e => e._id).includes(user._id);\r\n                                return (\r\n                                    <tr key={user._id} id={user._id}>\r\n                                        <td className={selected ? 'active' : ''} style={{padding: 5}} onClick={() => this.toggleUser(user)}>\r\n                                            <Row noGutters>\r\n                                                <Col xs={10}>\r\n                                                    <div className='profile-picture-wrapper'>\r\n                                                        <Image\r\n                                                            roundedCircle\r\n                                                            style={user.online ? ONLINE_STYLE : {}}\r\n                                                            className='profile-picture'\r\n                                                            src={user.pictureUrl ? user.pictureUrl : '/images/default-profile.jpg'}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div style={{fontSize: 13}}>\r\n                                                        <span style={{fontWeight: 700}}>\r\n                                                            {user.username}\r\n                                                        </span>\r\n                                                        <div style={{color: 'grey'}}>\r\n                                                            {!user.online && `${translation.PEOPLE.LAST_SEEN} ${timestampToHumanDate(user.lastTime, false, translation)}`}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col xs={2}>\r\n                                                    <div className='material-switch pull-right' style={{marginTop: 12}}>\r\n                                                        <input\r\n                                                            type='checkbox'\r\n                                                            checked={selected}\r\n                                                            onChange={() => {}}\r\n                                                        />\r\n                                                        <label className='label-success' />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        users: state.users.users,\r\n        translation: state.translation\r\n    })\r\n)(PeopleSelector);\r\n","// @flow\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport queryString from 'query-string';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PeopleSelector from '../common/PeopleSelector';\r\nimport type { User, Translation } from '../../types';\r\n\r\n\r\ntype Props = {\r\n    history: Object;\r\n    user: User,\r\n    translation: Translation,\r\n}\r\n\r\nexport class CreateConversation extends React.Component<Props, void> {\r\n\r\n    createConversation = (members: Array<User>) => {\r\n        const url = `/conversation?${queryString.stringify({userIds: members.map(e => e._id)})}`;\r\n        this.props.history.push(url);\r\n    };\r\n\r\n    render() {\r\n        let {user, translation, history} = this.props;\r\n        const {CONVERSATIONS} = translation;\r\n        return (\r\n            <Container fluid>\r\n                <Row noGutters>\r\n                    <Col md={{span: 10, offset: 1}} lg={{span: 8, offset: 2}}>\r\n                        <PeopleSelector\r\n                            excludedUserIds={[user._id]}\r\n                            submitButtonText={CONVERSATIONS.CREATE}\r\n                            onSubmit={(people) => this.createConversation(people)}\r\n                            onCancel={() => history.push('/conversations')}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        user: state.authentication.user,\r\n        translation: state.translation\r\n    })\r\n)(CreateConversation);\r\n"],"sourceRoot":""}