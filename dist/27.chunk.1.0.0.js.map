{"version":3,"sources":["webpack:///./src/components/CV/Section.js","webpack:///./src/components/CV/BasicInfo.js"],"names":["Left","React","Fragment","Middle","Right","__webpack_exports__","props","title","_props$opened","opened","_props$rows","rows","_props$cols","cols","_useState","useState","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","open","setOpen","sectionRows","left","middle","right","console","String","childrenLength","length","_props$children","children","_props$children2","_left","_middle","_right","elements","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","i","_elements","_elements3","_elements4","_elements5","_elements6","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_4___default","block","variant","size","aria-controls","aria-expanded","onClick","concat","toUpperCase","react_bootstrap_Collapse__WEBPACK_IMPORTED_MODULE_3___default","in","map","row","index","key","Object","react_redux__WEBPACK_IMPORTED_MODULE_2__","state","translation","BASIC_INFO","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","ageClicked","ageClick","react__WEBPACK_IMPORTED_MODULE_1___default","_Section__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap_Image__WEBPACK_IMPORTED_MODULE_5___default","src","react_bootstrap_OverlayTrigger__WEBPACK_IMPORTED_MODULE_6___default","placement","trigger","overlay","react_bootstrap_Tooltip__WEBPACK_IMPORTED_MODULE_7___default","SHOW_BIRTHDAY","moment","YEARS","SHOW_ON_MAP","url","window","win","ADDRESS","NAME","POSITION","ABOUT_ME","PERSONAL_SKILLS","printContent","document","innerHTML","originalContent","PRINT"],"mappings":"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","file":"27.chunk.1.0.0.js","sourcesContent":["// @flow\r\nimport React, { useState } from 'react';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const Left = React.Fragment, Middle = React.Fragment, Right = React.Fragment; // just for readability\r\n\r\ntype Props = {\r\n    title?: string,\r\n    opened?: boolean,\r\n    rows?: number,\r\n    cols?: number,\r\n    children: React.Node // [left?, middle, right?]\r\n}\r\n\r\nconst Section = (props: Props) => {\r\n    const {title, opened = true, rows = 1, cols = 2} = props;\r\n    const [open, setOpen] = useState(opened);\r\n\r\n    const sectionRows: Array<{left?: any, middle: any, right?: any}> = [];\r\n\r\n    if (rows === 1) {\r\n        if (props.children.length > 3) {\r\n            console.log(`--- You should specify number of rows for ${String(title)} section`);\r\n        }\r\n\r\n        let left, middle, right;\r\n        const childrenLength = props.children.length;\r\n        if (!childrenLength || childrenLength === 1) {\r\n            middle = props.children;\r\n        } else if (childrenLength === 2) {\r\n            [\r\n                left,\r\n                middle\r\n            ] = props.children;\r\n        } else if (childrenLength === 3) {\r\n            [\r\n                left,\r\n                middle,\r\n                right\r\n            ] = props.children;\r\n        }\r\n        sectionRows[0] = {left, middle, right};\r\n    } else {\r\n        let elements = [...props.children];\r\n\r\n        if (rows >= 2 && elements.length > 1) {\r\n            let left, middle, right;\r\n            if (elements.length === 2) {\r\n                for (let i = 0; elements.length !== 0; i++) {\r\n                    [ middle ] = elements;\r\n                    sectionRows[i] = {middle};\r\n                    elements = elements.splice(1);\r\n                }\r\n            } else if (cols === 2 && elements.length >= 4) {\r\n                for (let i = 0; elements.length !== 0; i++) {\r\n                    [ left, middle ] = elements;\r\n                    sectionRows[i] = {left, middle};\r\n                    elements = elements.splice(2);\r\n                }\r\n            } else if (cols === 3 && elements.length >= 6) {\r\n                for (let i = 0; elements.length !== 0; i++) {\r\n                    [ left, middle, right ] = elements;\r\n                    sectionRows[i] = {left, middle, right};\r\n                    elements = elements.splice(3);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {title &&\r\n            <div className='flex-container'>\r\n                <div className='flex-left-column' />\r\n                <div className='flex-middle-column'>\r\n                    <Button\r\n                        block\r\n                        variant='outline-secondary'\r\n                        size='sm'\r\n                        aria-controls='collapse-text'\r\n                        aria-expanded={open}\r\n                        className='section-title'\r\n                        onClick={() => setOpen(!open)}\r\n                    >\r\n                        <i className={`section-title-icon fas fa-angle-${open ? 'down' : 'right'} fa-lg`} />\r\n                        {title.toUpperCase()}\r\n                    </Button>\r\n                </div>\r\n                <div className='flex-right-column' />\r\n            </div>\r\n            }\r\n\r\n            <Collapse in={open}>\r\n                <div>\r\n                    {sectionRows.map((row, index) => (\r\n                        <div key={index} className='flex-container'>\r\n                            <div className='flex-left-column'>\r\n                                {row.left}\r\n                            </div>\r\n                            <div className='flex-middle-column'>\r\n                                {row.middle}\r\n                            </div>\r\n                            <div className='flex-right-column'>\r\n                                {row.right}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Collapse>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Section;","// @flow\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment/moment';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Section, {Left, Middle, Right} from './Section';\r\nimport type {Translation} from '../../types';\r\n\r\ntype Props = {\r\n    translation: Translation,\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        translation: state.translation\r\n    })\r\n)((props: Props) => {\r\n    const BASIC_INFO = props.translation.CV.BASIC_INFO;\r\n    const [ageClicked, ageClick] = useState(false);\r\n    const birthday = 648950400000; // 26 July 1990\r\n\r\n    const goto = (url: string) => {\r\n        const win = window.open(url, '_blank');\r\n        win.focus();\r\n    };\r\n\r\n    const printCV = () => {\r\n        const printContent = document.getElementById('cv').innerHTML;\r\n        const originalContent = document.body.innerHTML;\r\n        document.body.innerHTML = printContent;\r\n        window.print();\r\n        document.body.innerHTML = originalContent;\r\n    };\r\n    return (\r\n        <Section>\r\n            <Left>\r\n                <Image\r\n                    className='user-picture'\r\n                    src='https://i.imgur.com/1Eo3q13.jpg'\r\n                />\r\n                <OverlayTrigger\r\n                    placement='left'\r\n                    trigger='hover'\r\n                    overlay={\r\n                        <Tooltip>{BASIC_INFO.SHOW_BIRTHDAY}</Tooltip>\r\n                    }\r\n                >\r\n                    <Button\r\n                        block\r\n                        variant='outline-secondary'\r\n                        size='sm'\r\n                        className='cv-btn'\r\n                        onClick={() => ageClick(!ageClicked)}\r\n                    >\r\n                        {ageClicked ?\r\n                            moment(birthday).format('D MMM YYYY') :\r\n                            `${moment().diff(birthday, 'years')} ${BASIC_INFO.YEARS}`\r\n                        }\r\n                    </Button>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger\r\n                    placement='left'\r\n                    trigger='hover'\r\n                    overlay={\r\n                        <Tooltip>{BASIC_INFO.SHOW_ON_MAP}</Tooltip>\r\n                    }\r\n                >\r\n                    <Button\r\n                        block\r\n                        variant='outline-secondary'\r\n                        size='sm'\r\n                        className='cv-btn mt-1'\r\n                        onClick={() => goto('https://www.google.com.ua/maps/@46.4751149,30.7362336,14z')}\r\n                    >\r\n                        {BASIC_INFO.ADDRESS}\r\n                    </Button>\r\n                </OverlayTrigger>\r\n            </Left>\r\n\r\n            <Middle>\r\n                <h1 className='cv-username text-center text-md-left'>{BASIC_INFO.NAME}</h1>\r\n                <h3 className='cv-title text-center text-md-left'>{BASIC_INFO.POSITION}</h3>\r\n                <p className='cv-about-me mobile-text'>\r\n                    {BASIC_INFO.ABOUT_ME}\r\n                </p>\r\n                <div className='cv-about-me mobile-text'>\r\n                    {BASIC_INFO.PERSONAL_SKILLS}\r\n                </div>\r\n            </Middle>\r\n\r\n            <Right>\r\n                <Button\r\n                    block\r\n                    variant='outline-secondary'\r\n                    size='sm'\r\n                    className='cv-btn'\r\n                    onClick={printCV}\r\n                >\r\n                    {BASIC_INFO.PRINT}\r\n                </Button>\r\n            </Right>\r\n        </Section>\r\n    )\r\n});"],"sourceRoot":""}